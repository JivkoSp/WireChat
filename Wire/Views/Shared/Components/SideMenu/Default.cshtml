@model SideMenuViewModel

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<div class="col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 bg-light">
    <div class="users-container">
        <div class="chat-search-box mb-3">
            <div class="input-group">
                <input class="form-control" placeholder="Search friends">
                <div class="input-group-btn">
                    <button type="button" class="btn btn-primary">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </div>

        <ul id="FriendList" style="height:66.8vh;" class="users overflow-auto">
            @foreach (var friend in Model.Contacts)
            {
                <li class="person">
                    <a id="Contact-@friend.AppUser.Id" asp-controller="Chat" asp-action="ChatRoom" asp-route-ChatId="@friend.ChatId" class="user">

                        @if (friend.AppUser.ProfilePicture != null)
                        {
                            <img src="data:image/jpeg;base64,
                                 @Convert.ToBase64String(friend.AppUser.ProfilePicture.Picture)" alt="friend-contact" />
                        }
                        else
                        {
                            <i class="bi bi-robot h2 pl-2"></i>
                        }                     
                    </a>
                    <p class="name-time">
                        <span class="name">@friend.AppUser.UserName</span>
                        <span class="time font text-dark"></span>
                    </p>
                </li>
            }
        </ul>

        <div class="row">
            <div class="col col-10 mt-3 ml-4">
                @if (Model.RoomType == "Public")
                {
                    <i id="GroupTopicsMenu" class="bi bi-arrow-return-right float-right h5"></i>
                }
               <a asp-controller="User" asp-action="UserProfile"><i class="bi bi-person-circle float-right h5 pr-3"></i></a> 
            </div>
        </div>
    </div>
</div>

@if (Model.RoomType == "Public")
{
    <vc:group-side-menu chat-id="@int.Parse(ViewContext.HttpContext.Request.Query["ChatId"])" />
}

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>

    $("document").ready(() => {

        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub").build();

        connection.start().then(() => {

            connection.on("AddToPrivateChat", (user, message) => {

                let liElement = document.createElement("li");
                liElement.setAttribute("class", "person");

                let aElement = document.createElement("a");
                aElement.setAttribute("class", "user");
                aElement.setAttribute("href", `/Chat/ChatRoom?ChatId=${message.chatId}`);

                let imgElement = document.createElement("img");
                imgElement.setAttribute("src", "https://www.bootdey.com/img/Content/avatar/avatar3.png");
                imgElement.setAttribute("alt", "friend-contact");

                let spanElement = document.createElement("span");
                spanElement.setAttribute("class", "status busy");

                aElement.appendChild(imgElement);
                aElement.appendChild(spanElement);

                let pElement = document.createElement("p");
                pElement.setAttribute("class", "name-time");

                let spanUserNameElement = document.createElement("span");
                spanUserNameElement.setAttribute("class", "name");
                spanUserNameElement.textContent = message.groupName;

                let spanJoinDateElement = document.createElement("span");
                spanJoinDateElement.setAttribute("class", "time font text-dark");

                pElement.appendChild(spanUserNameElement);
                pElement.appendChild(spanJoinDateElement);

                liElement.appendChild(aElement);
                liElement.appendChild(pElement);

                document.getElementById("FriendList").appendChild(liElement);
            });

        }).catch(function (err) {
            return console.error(err.toString());
        });

        $("#GroupTopicsMenu").click(() => {

            let element = document.getElementById("groupTopics-container");

            if (element.style.display == "none") {
                element.style.display = "block";
                document.getElementById("GroupTopicsMenu")
                  .setAttribute("class", "bi bi-arrow-return-left float-right h5")
            }
            else {
                element.style.display = "none";
                document.getElementById("GroupTopicsMenu")
                    .setAttribute("class", "bi bi-arrow-return-right float-right h5")
            }
        });
    });
</script>